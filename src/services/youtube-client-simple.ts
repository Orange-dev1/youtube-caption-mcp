import type {
  VideoInfo,
  CaptionsList,
  CaptionsData,
  SearchResponse,
} from '../types/youtube.js';
import {
  VideoNotFoundError,
  CaptionsNotAvailableError,
  SystemError,
} from '../types/errors.js';

export class SimpleYouTubeClient {
  constructor() {
    console.debug('SimpleYouTubeClient initialized (mock mode)');
  }

  // 動画情報を取得（モック版）
  async getVideoInfo(videoId: string): Promise<VideoInfo> {
    console.debug(`Getting video info for: ${videoId}`);
    
    // 簡単な検証
    if (!videoId || videoId.length !== 11) {
      throw new VideoNotFoundError(videoId);
    }

    // モックデータを返す
    return {
      id: videoId,
      title: `テスト動画: ${videoId}`,
      description: 'これはテスト用のモック動画です。実際のYouTube APIは現在調整中です。',
      channel: 'テストチャンネル',
      duration: '5:30',
      publishedAt: '2024年1月1日',
      viewCount: '1.5M',
      thumbnail: `https://img.youtube.com/vi/${videoId}/maxresdefault.jpg`,
      language: 'ja',
    };
  }

  // 利用可能な字幕一覧を取得（モック版）
  async getCaptionsList(videoId: string): Promise<CaptionsList> {
    console.debug(`Getting captions list for: ${videoId}`);
    
    if (!videoId || videoId.length !== 11) {
      throw new VideoNotFoundError(videoId);
    }

    // モック字幕データ
    return {
      videoId,
      availableCaptions: [
        {
          languageCode: 'ja',
          languageName: 'Japanese',
          isAutoGenerated: true,
          kind: 'asr',
        },
        {
          languageCode: 'en',
          languageName: 'English',
          isAutoGenerated: false,
          kind: 'captions',
        },
      ],
      totalCount: 2,
    };
  }

  // 字幕データをダウンロード（モック版）
  async downloadCaptions(
    videoId: string,
    language: string = 'ja',
    format: 'raw' | 'srt' | 'vtt' = 'raw'
  ): Promise<CaptionsData> {
    console.debug(`Downloading captions for: ${videoId}, lang: ${language}, format: ${format}`);
    
    if (!videoId || videoId.length !== 11) {
      throw new VideoNotFoundError(videoId);
    }

    // 利用可能な言語をチェック
    const availableLanguages = ['ja', 'en'];
    if (!availableLanguages.includes(language)) {
      throw new CaptionsNotAvailableError(videoId, language);
    }

    // モック字幕セグメント
    const mockSegments = [
      {
        start: 0.0,
        duration: 3.5,
        text: 'こんにちは、これはテスト用の字幕です。',
      },
      {
        start: 3.5,
        duration: 4.0,
        text: '実際のYouTube APIは現在調整中です。',
      },
      {
        start: 7.5,
        duration: 3.0,
        text: 'しばらくお待ちください。',
      },
    ];

    return {
      videoId,
      language,
      format,
      isAutoGenerated: language === 'ja',
      segments: mockSegments,
    };
  }

  // 字幕付き動画を検索（モック版）
  async searchVideosWithCaptions(
    query: string,
    language?: string,
    limit: number = 10
  ): Promise<SearchResponse> {
    console.debug(`Searching videos with captions: ${query}, limit: ${limit}`);
    
    // モック検索結果
    const mockResults = Array.from({ length: Math.min(limit, 3) }, (_, i) => ({
      videoId: `mock${i + 1}${'0'.repeat(7)}`,
      title: `${query} - テスト動画 ${i + 1}`,
      channel: `テストチャンネル ${i + 1}`,
      duration: `${3 + i}:${30 + i * 15}`,
      thumbnail: `https://img.youtube.com/vi/mock${i + 1}${'0'.repeat(7)}/maxresdefault.jpg`,
      availableCaptions: [
        {
          languageCode: 'ja',
          languageName: 'Japanese',
          isAutoGenerated: true,
          kind: 'asr',
        },
      ],
    }));

    return {
      query,
      results: mockResults,
      totalCount: mockResults.length,
    };
  }
}

// デフォルトのYouTubeクライアントインスタンス（シンプル版）
export const simpleYouTubeClient = new SimpleYouTubeClient();
